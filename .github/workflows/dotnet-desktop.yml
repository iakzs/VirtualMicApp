name: .NET Core Desktop

permissions:
  contents: write
  issues: write

on:
  push:
    tags:
      - '*'  # This will trigger the workflow on tag creation.
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: VirtualMicApp.sln
      Project_Path: VirtualMicApp/VirtualMicApp.csproj
      Output_Directory: VirtualMicApp/bin/${{ matrix.configuration }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test ${{ env.Test_Project_Path }}

    - name: Build the project
      run: dotnet build ${{ env.Project_Path }} --configuration ${{ matrix.configuration }}

    - name: Archive build output
      run: |
        cd $env:Output_Directory
        Compress-Archive -Path * -DestinationPath ../VirtualMicApp-${{ matrix.configuration }}.zip
      shell: pwsh

    - name: Upload build output as artifact
      uses: actions/upload-artifact@v3
      with:
        name: Build Output
        path: VirtualMicApp/bin/VirtualMicApp-${{ matrix.configuration }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: Build Output
        path: ./

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Release ${{ github.ref_name }} - Published by GitHub Actions
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: VirtualMicApp-${{ matrix.configuration }}.zip
        asset_name: VirtualMicApp-${{ matrix.configuration }}.zip
        asset_content_type: application/zip
